service: server
app: blog

frameworkVersion: '2'

custom:
  defaultStage: dev
  envFile: ${file(./sls-stack/env/${self:provider.stage}.yml)}
  # envMapping:
  #   dev:
  #     envFile: ${file(./sls-stack/env/dev.yml)}
  #   stg:
  #     envFile: ${file(./sls-stack/env/stg.yml)}
  #   prod:
  #     envFile: ${file(./sls-stack/env/prod.yml)}
  pythonRequirements:
    dockerizePip: false
    usePoetry: false

  # customDomain:
  #   domainName: ${self:custom.envFile.CUSTOM_DOMAIN}
  #   basePath: ""
  #   stage: ${self:provider.stage}
  #   createRoute53Record: true
  #   certificateName: ${self:custom.envFile.CUSTOM_DOMAIN}

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  profile: serverless
  timeout: 30 # API Gatewayのmax timeout(30)が上限となる
  logRetentionInDays: 7
  apiName: blog-backend-api

package:
  exclude:
    - .venv
    - .vscode
    - pyproject.toml
    - poetry.lock
    - .devcontainer.json
    - .flake8
    - .gitignore
    - Dockerfile
    - handler.py
    - Makefile
    - node_modules/
    - package.json
    - package-lock.json
    - serverless.yml
    - sls-stack
    - ddb-data

functions: ${file(./sls-stack/functions.yml)}

resources:
  - ${file(./sls-stack/iam-role.yml)}
  - ${file(./sls-stack/cognito-user-pool.yml)}
  - ${file(./sls-stack/cognito-id-pool.yml)}

plugins:
  - serverless-python-requirements